<section class="container">
    {{#if loggedIn}}

        {{!-- option to display posts from a certain user --}}
        <form id="view-option-form" action="/viewOption" method="POST">
            <label>search posts from user</label>
            <input type="text" id="search-user-posts" name="username"
            placeholder="some username">
            <button type="submit">search</button>
            <button id="show-all-posts">show all posts</button>
        </form>

        <div class="action-bar">
            <button id="openPostFormButton" class="open-post-form-button">Create Post</button>
            <form id="sort-option-form" action="/sortOption" method="POST" class="sort-form">
                <label class="sort-label">Sort By:</label>
                <div class="dropdown">
                    <select name="sort-option" onchange="this.form.submit()" class="sort-dropdown">
                        <option value="timestamp" {{#ifCond sortOrder "timestamp"}} selected {{/ifCond}}>Most Recent</option>
                        <option value="likes" {{#ifCond sortOrder "likes"}} selected {{/ifCond}}>Most Liked</option>
                    </select>
                </div>
            </form>
        </div>
        <div id="postFormPopup" class="post-form-popup" style="display: none;">
            <section class="post-form">
                <form id="postForm" action="/posts" method="POST" onsubmit="return validateForm()">
                    <button type="button" class="close-button" onclick="togglePostFormPopup()">X</button>
                    <input type="text" name="title" id="title" placeholder="Title" required>
                    <textarea name="postBody" id="postBody" placeholder="What's on your mind?" required></textarea>
                    <div class="form-actions">
                        <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                        <button type="submit" class="post-button">Post</button>
                    </div>
                </form>
                <div id="emoji-container" class="emoji-panel" style="display: none;">
                    <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                    <div id="emoji-grid" class="emoji-grid"></div>
                </div>
            </section>
        </div>
    {{/if}}

    <section class="posts-list">

        {{#if posts.length}}
        <ul>
            {{#each posts}}
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <p>No posts</p>
        {{/if}}
    </section>
</section>

<script>
let allEmojis = []; 

document.addEventListener("DOMContentLoaded", function () {
    fetchEmojis();
    document.getElementById('openPostFormButton').addEventListener('click', togglePostFormPopup);
});
document.getElementById("show-all-posts").addEventListener("click", setViewOption);

function togglePostFormPopup() {
    const popup = document.getElementById('postFormPopup');
    popup.style.display = popup.style.display === 'none' ? 'block' : 'none';
}

async function setSortingOption(event) {
    const sortOption = event.target.value;
    document.getElementById("sort-option-form").submit();
}

async function setViewOption(event) {
    document.getElementById("search-user-posts").value = "";
    document.getElementById("view-option-form").submit();
    event.target.setAttribute("checked", "checked");
}

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';
}

async function fetchEmojis() {
    const EMOJI_API = '{{EMOJI_API}}';
    try {
        const response = await fetch(`https://emoji-api.com/emojis?access_key=${EMOJI_API}`);
        const emojis = await response.json();
        allEmojis = emojis.map(emoji => ({
            character: emoji.character,
            slug: emoji.slug
        }));
        displayEmojis(allEmojis);
    } catch (error) {
        console.error('Error fetching emojis:', error);
    }
}

function displayEmojis(emojis, limit = 200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug; 
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    const filteredEmojis = allEmojis.filter(emoji => emoji.slug.includes(searchTerm));
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    const textarea = document.getElementById('postBody');
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const text = textarea.value;
    textarea.value = text.substring(0, start) + emoji + text.substring(end);
    textarea.focus();
    textarea.setSelectionRange(start + emoji.length, start + emoji.length);
}

function validateForm() {
    const title = document.getElementById('title').value.trim();
    const postBody = document.getElementById('postBody').value.trim();
    
    if (title === '' || postBody === '') {
        alert('Title and post content cannot be empty.');
        return false;
    }
    return true;
}
</script>

<style>
.action-bar {
    display: flex;
    justify-content: space-between;
    width: 53%;
    margin: 20px;
}

.open-post-form-button {
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.post-form-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 500px;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 20px;
    z-index: 1000;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.close-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: transparent;
    border: none;
    font-size: 20px;
    cursor: pointer;
}

.sort-form {
    display: flex;
    align-items: center;
}

.sort-label {
    margin-right: 10px;
}

.sort-dropdown {
    padding: 8px;
    border-radius: 5px;
    border: 1px solid #ddd;
    background-color: #fff;
    cursor: pointer;
}
</style>
