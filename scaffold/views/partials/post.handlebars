{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <img src="{{this.avatar_url}}" alt="User Avatar" />
    </div>
    <div class="post-content preserve-newlines">
        <!-- Title and Buttons -->
        <div class="post-header">
            <h2>{{this.title}}</h2>
            <div class="post-buttons">
                {{#ifCond user.username this.username}}
                    <button class="btn-delete" data-id="{{this.id}}"><i class="fas fa-trash-alt"></i> Delete</button>
                {{else}}
                    <button class="btn-like" data-id="{{this.id}}"><i class="fas fa-heart"></i> Like</button>
                {{/ifCond}}
            </div>
        </div>
        <!-- Post Content -->
        <p>{{this.content}}</p>
        <!-- Post Footer -->
        <div class="post-footer">
            <span>Posted by {{this.username}} on {{formatDate this.timestamp}}</span>
            <span class="like-count">{{this.likes}} Likes</span>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".btn-delete").forEach(button => {
            button.addEventListener("click", handleDeleteClick);
        });

        document.querySelectorAll(".btn-like").forEach(button => {
            button.addEventListener("click", handleLikeClick);
        });
    });

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.btn-delete');
        const postId = buttonElement.getAttribute('data-id');

        fetch(`/delete/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ postId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove the post element from the DOM
                buttonElement.closest('.post').remove();
            } else {
                alert(data.message);
            }
        })
        .catch(error => console.error('Error:', error));
    }

    function handleLikeClick(event) {
        const buttonElement = event.target.closest('.btn-like');
        const postId = buttonElement.getAttribute('data-id');

        fetch(`/like/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ postId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update the like count in the DOM
                const likeCountElement = buttonElement.closest('.post').querySelector('.like-count');
                likeCountElement.textContent = `${data.likes} Likes`;
            } else {
                alert(data.message);
            }
        })
        .catch(error => console.error('Error:', error));
    }
</script>
